//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.07.16 at 02:05:35 PM EDT 
//


package org.eclipse.tracecompass.tmf.xmlconverter.core.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.eclipse.tracecompass.tmf.xmlconverter.core.model package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Tmfxml_QNAME = new QName("", "tmfxml");
    private final static QName _ConditionMultipleNot_QNAME = new QName("", "not");
    private final static QName _ConditionMultipleCondition_QNAME = new QName("", "condition");
    private final static QName _ConditionMultipleOr_QNAME = new QName("", "or");
    private final static QName _ConditionMultipleAnd_QNAME = new QName("", "and");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.eclipse.tracecompass.tmf.xmlconverter.core.model
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link HeadOutput }
     * 
     */
    public HeadOutput createHeadOutput() {
        return new HeadOutput();
    }

    /**
     * Create an instance of {@link HeadProvider }
     * 
     */
    public HeadProvider createHeadProvider() {
        return new HeadProvider();
    }

    /**
     * Create an instance of {@link Tmfxml }
     * 
     */
    public Tmfxml createTmfxml() {
        return new Tmfxml();
    }

    /**
     * Create an instance of {@link DefinedValue }
     * 
     */
    public DefinedValue createDefinedValue() {
        return new DefinedValue();
    }

    /**
     * Create an instance of {@link Location }
     * 
     */
    public Location createLocation() {
        return new Location();
    }

    /**
     * Create an instance of {@link Condition }
     * 
     */
    public Condition createCondition() {
        return new Condition();
    }

    /**
     * Create an instance of {@link ConditionMultiple }
     * 
     */
    public ConditionMultiple createConditionMultiple() {
        return new ConditionMultiple();
    }

    /**
     * Create an instance of {@link StateValue }
     * 
     */
    public StateValue createStateValue() {
        return new StateValue();
    }

    /**
     * Create an instance of {@link StateAttribute }
     * 
     */
    public StateAttribute createStateAttribute() {
        return new StateAttribute();
    }

    /**
     * Create an instance of {@link EventHandler }
     * 
     */
    public EventHandler createEventHandler() {
        return new EventHandler();
    }

    /**
     * Create an instance of {@link StateProvider }
     * 
     */
    public StateProvider createStateProvider() {
        return new StateProvider();
    }

    /**
     * Create an instance of {@link ConditionSingle }
     * 
     */
    public ConditionSingle createConditionSingle() {
        return new ConditionSingle();
    }

    /**
     * Create an instance of {@link TimeGraphView }
     * 
     */
    public TimeGraphView createTimeGraphView() {
        return new TimeGraphView();
    }

    /**
     * Create an instance of {@link StateChange }
     * 
     */
    public StateChange createStateChange() {
        return new StateChange();
    }

    /**
     * Create an instance of {@link EventField }
     * 
     */
    public EventField createEventField() {
        return new EventField();
    }

    /**
     * Create an instance of {@link ViewStateAttribute }
     * 
     */
    public ViewStateAttribute createViewStateAttribute() {
        return new ViewStateAttribute();
    }

    /**
     * Create an instance of {@link ViewEntry }
     * 
     */
    public ViewEntry createViewEntry() {
        return new ViewEntry();
    }

    /**
     * Create an instance of {@link HeadOutput.Analysis }
     * 
     */
    public HeadOutput.Analysis createHeadOutputAnalysis() {
        return new HeadOutput.Analysis();
    }

    /**
     * Create an instance of {@link HeadOutput.Label }
     * 
     */
    public HeadOutput.Label createHeadOutputLabel() {
        return new HeadOutput.Label();
    }

    /**
     * Create an instance of {@link HeadProvider.TraceType }
     * 
     */
    public HeadProvider.TraceType createHeadProviderTraceType() {
        return new HeadProvider.TraceType();
    }

    /**
     * Create an instance of {@link HeadProvider.Label }
     * 
     */
    public HeadProvider.Label createHeadProviderLabel() {
        return new HeadProvider.Label();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Tmfxml }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "tmfxml")
    public JAXBElement<Tmfxml> createTmfxml(Tmfxml value) {
        return new JAXBElement<Tmfxml>(_Tmfxml_QNAME, Tmfxml.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConditionSingle }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "not", scope = ConditionMultiple.class)
    public JAXBElement<ConditionSingle> createConditionMultipleNot(ConditionSingle value) {
        return new JAXBElement<ConditionSingle>(_ConditionMultipleNot_QNAME, ConditionSingle.class, ConditionMultiple.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Condition }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "condition", scope = ConditionMultiple.class)
    public JAXBElement<Condition> createConditionMultipleCondition(Condition value) {
        return new JAXBElement<Condition>(_ConditionMultipleCondition_QNAME, Condition.class, ConditionMultiple.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConditionMultiple }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "or", scope = ConditionMultiple.class)
    public JAXBElement<ConditionMultiple> createConditionMultipleOr(ConditionMultiple value) {
        return new JAXBElement<ConditionMultiple>(_ConditionMultipleOr_QNAME, ConditionMultiple.class, ConditionMultiple.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ConditionMultiple }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "and", scope = ConditionMultiple.class)
    public JAXBElement<ConditionMultiple> createConditionMultipleAnd(ConditionMultiple value) {
        return new JAXBElement<ConditionMultiple>(_ConditionMultipleAnd_QNAME, ConditionMultiple.class, ConditionMultiple.class, value);
    }

}
